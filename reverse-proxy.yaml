---
apiVersion: v1
kind: Namespace
metadata:
  name: reverse-proxy

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: reverse-proxy
  labels:
    app: nginx-conf
data:
  default.conf: |-
    server {
        listen 80;
        server_name _;
        location / {
            proxy_pass http://istio-ingressgateway.istio-system.svc.cluster.local:80;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 150;
        }

        location /health {
            return 200;
        }
    }

---
# apiVersion: extensions/v1beta1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reverse-proxy
  namespace: reverse-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reverse-proxy
  template:
    metadata:
      labels:
        app: reverse-proxy
    spec:
      containers:
      - name: nginx
        image: nginx:1.17.7-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - name: nginx
          protocol: TCP
          containerPort: 80
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
        - name: config
          configMap:
            name: nginx-conf

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: reverse-proxy
spec:
  selector:
    app: reverse-proxy
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-ingress
  namespace: reverse-proxy
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: "*.local"
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx-service
          servicePort: 80
